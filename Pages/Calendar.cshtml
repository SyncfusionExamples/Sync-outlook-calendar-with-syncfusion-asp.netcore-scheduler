@page
@model CalendarModel
@{
    ViewData["Title"] = "ASP.NET Core and Microsoft Graph";
}

@using Syncfusion.EJ2.Schedule
@Html.AntiForgeryToken()

<div>
    <h1>Calendar Events</h1>
    @if (User.Identity.IsAuthenticated) {
        <ejs-schedule id="schedule" height="550" actionBegin="onActionBegin">
            <e-schedule-eventsettings>
                <e-data-manager url="/Calendar?handler=LoadData" adaptor="UrlAdaptor"></e-data-manager>
            </e-schedule-eventsettings>
            <e-schedule-views>
                <e-schedule-view option="Week"></e-schedule-view>
            </e-schedule-views>
        </ejs-schedule>
    }
    else {
        <a class="btn btn-primary btn-large" asp-area="MicrosoftIdentity" asp-controller="Account" asp-action="SignIn">Click here to sign in</a>
    }

    <br /><br />
    Learn how to build this page by going through the <strong><a href="https://docs.microsoft.com/learn/paths/m365-msgraph-dotnetcore-scenarios/?WT.mc_id=m365-30352-cxa" target="_blank">Explore Microsoft Graph scenarios for ASP.NET Core development</a></strong> learning path on Microsoft Learn.

</div>

<script type="text/javascript">
    function onActionBegin(args) {
        if (args.requestType === 'toolbarItemRendering') {
            this.eventSettings.dataSource.dataSource.headers = [{ 'XSRF-TOKEN': $("input:hidden[name='__RequestVerificationToken']").val() }];
        }
    }
</script>